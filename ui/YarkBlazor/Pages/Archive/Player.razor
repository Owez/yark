@page "/archive/play"
@inject Blazored.SessionStorage.ISyncSessionStorageService SessionStorage
@using YarkApiClient
@using System.Web

<a href=@VideoCollectionKindMethods.GenerateLink(VideoCollectionKind) class="back-button"><img
        src=@IconKindMethods.GetUri(IconKind.Back) alt="Back">Back</a>
@if (Video != null && ArchiveId != null)
{
    @* NOTE: in the future this could be made into a reel-like view if its a short *@
    <video src=@GenerateVideoLink(Video, ArchiveId) controls autoplay></video>
    <h1>@Video.Title.Current()</h1>
    <p class="info">@Video.Views.Current() views â€¢ @GenerateUploadedString(Video)</p>
    <h2>History</h2>
    <YarkBlazor.Components.VideoHistory Video=@Video />
}

<style scoped>
    .back-button {
        color: #525252;
        text-decoration: none;
        font-size: 1rem;
        padding: 10px;
        margin-left: -10px;
    }

    .back-button>img {
        filter: invert(31%) sepia(6%) saturate(8%) hue-rotate(314deg) brightness(94%) contrast(89%);
        width: 18px;
        height: 18px;
        margin-top: 2px;
        margin-bottom: -2px;
    }

    video {
        width: calc(60vw - 5rem);
        min-width: 500px;
        border-radius: 10px;
        aspect-ratio: 16/9;
        background-color: black;
    }

    h1 {
        margin-top: 15px;
        margin-bottom: 2.5px;
        font-size: 1.6rem;
        font-weight: 500;
    }

    h2 {
        font-size: 1.15rem;
        font-weight: 500;
        margin-top: 30px;
        margin-bottom: 7.5px;
    }

    .info {
        font-size: 0.95rem;
        color: #525252;
    }
</style>


@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "id")]
    public string? Id { get; set; } = null;

    [Parameter]
    [SupplyParameterFromQuery(Name = "kind")]
    public string VideoCollectionKindString { get; set; } = "videos";

    Video? Video { get; set; } = null;

    string? ArchiveId { get; set; } = null;

    VideoCollectionKind VideoCollectionKind { get; set; } = VideoCollectionKind.Videos;

    protected override async Task OnInitializedAsync()
    {
        @* Figure out the video collection kind *@
        VideoCollectionKind = VideoCollectionKindMethods.DecodeFromString(VideoCollectionKindString);

        @* Get archive information *@
        Archive archive = SessionStorage.GetItem<Archive>("OpenedArchive");
        ArchiveId = archive.Meta.Id;
        Video = await Video.Get(new Context(), archive.Meta.Id, HttpUtility.UrlDecode(Id));
        @* TODO: err handling on not found video *@

        await base.OnInitializedAsync();
    }

    string GenerateVideoLink(Video video, string archiveId)
    {
        return video.FileUrl(new Context(), archiveId);
    }

    string GenerateUploadedString(Video video)
    {
        return new TimeAgo(video.Uploaded).ToString();
    }
}